# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class StringMapEntry(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, key: str=None, value: object=None):
        """
        StringMapEntry - a model defined in Swagger

        :param key: The key of this StringMapEntry.
        :type key: str
        :param value: The value of this StringMapEntry.
        :type value: object
        """
        self.swagger_types = {
            'key': str,
            'value': object
        }

        self.attribute_map = {
            'key': 'key',
            'value': 'value'
        }

        self._key = key
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'StringMapEntry':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StringMapEntry of this StringMapEntry.
        :rtype: StringMapEntry
        """
        return deserialize_model(dikt, cls)

    @property
    def key(self) -> str:
        """
        Gets the key of this StringMapEntry.
        

        :return: The key of this StringMapEntry.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key: str):
        """
        Sets the key of this StringMapEntry.
        

        :param key: The key of this StringMapEntry.
        :type key: str
        """

        self._key = key

    @property
    def value(self) -> object:
        """
        Gets the value of this StringMapEntry.
        

        :return: The value of this StringMapEntry.
        :rtype: object
        """
        return self._value

    @value.setter
    def value(self, value: object):
        """
        Sets the value of this StringMapEntry.
        

        :param value: The value of this StringMapEntry.
        :type value: object
        """

        self._value = value

